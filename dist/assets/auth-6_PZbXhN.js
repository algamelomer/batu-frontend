import{O as a,E as s,P as t}from"./index-LWMYTzMc.js";const i=a("auth",{state:()=>({authUser:null,authErrors:[]}),getters:{user:e=>e.authUser,errors:e=>e.authErrors},actions:{async getToken(){await s.get("/sanctum/csrf-cookie")},async getUser(){try{await this.getToken();const e=await s.get("/api/user");this.authUser=e.data}catch(e){e.response.status==401?(this.authUser=!1,this.authErrors=Object.values("You need to login first!").flat()):console.error(e.response.status)}},async handleLogin(e){if(this.authErrors=[],await this.getToken(),!e.email)this.authErrors=Object.values("email is required").flat();else if(!e.password)this.authErrors=Object.values("Password is required").flat();else if(e.password.length<8)this.authErrors=Object.values("Password must be at least 8 characters long").flat();else try{await this.getToken(),await s.post("/api/login",{email:e.email,password:e.password}),this.router.push("/dashboard")}catch(r){r.response.status===422&&(this.authErrors=Object.values("invalid email or password").flat())}},async handleLogout(){try{await s.post("/api/logout"),document.cookie.split(";").forEach(e=>{document.cookie=e.replace(/^ +/,"").replace(/=.*/,"=;expires="+new Date().toUTCString()+";path=/")}),this.authUser=null,this.router.push("/login")}catch(e){console.error("Logout failed:",e)}},async handleRegister(e){this.authErrors=[],await this.getToken();try{await s.post("/api/register",{name:e.name,email:e.email,password:e.password,password_confirmation:e.password_confirmation}),this.router.push("/dashboard")}catch(r){r.response.status===422&&(this.authErrors=r.response.data.errors)}},async handlePosts(e){this.authErrors=[];try{await this.getToken(),e.id||(e.id="");const r=await s.post("/api/posts/"+e.id,e,{headers:{"Content-Type":"multipart/form-data"}});r.status===201?(alert("Success"),t.go(-1)):r.status===200?(alert("Success"),t.go(-1)):alert("Error: Unexpected status code")}catch(r){r.response?r.response.status===422?(this.authErrors=r.response.data.errors,alert("Error: Validation failed")):alert("Error: Server error"):alert("Error: Network error")}},async handlePostsDelete(e){this.authErrors=[];try{await this.getToken(),await s.delete("/api/posts/"+e),alert("deleted successfully")}catch(r){r.response?r.response.status===422?(this.authErrors=r.response.data.errors,alert("Error: Validation failed")):alert("Error: Server error"):alert("Error: Network error")}},async handleFacultie(e){this.authErrors=[];try{await this.getToken(),e.id||(e.id="");const r=await s.post("/api/faculty/"+e.id,e,{headers:{"Content-Type":"multipart/form-data"}});r.status===201?(alert("Success"),t.go(-1)):r.status===200?(alert("Success"),t.go(-1)):alert("Error: Unexpected status code")}catch(r){r.response?r.response.status===422?(this.authErrors=r.response.data.errors,alert("Error: Validation failed")):alert("Error: Server error"):alert("Error: Network error")}},async handleFacultieDelete(e){this.authErrors=[];try{await this.getToken(),await s.delete("/api/faculty/"+e),alert("deleted successfully")}catch(r){r.response?r.response.status===422?(this.authErrors=r.response.data.errors,alert("Error: Validation failed")):alert("Error: Server error"):alert("Error: Network error")}},async handleDepartment(e){this.authErrors=[];try{await this.getToken(),e.id||(e.id="");const r=await s.post("/api/department/"+e.id,e,{headers:{"Content-Type":"multipart/form-data"}});r.status===201?(alert("Success"),t.go(-1)):r.status===200?(alert("Success"),t.go(-1)):alert("Error: Unexpected status code")}catch(r){r.response?r.response.status===422?(this.authErrors=r.response.data.errors,alert("Error: Validation failed")):alert("Error: Server error"):alert("Error: Network error")}},async handleDepartmentDelete(e){this.authErrors=[];try{await this.getToken(),await s.delete("/api/department/"+e),alert("deleted successfully")}catch(r){r.response?r.response.status===422?(this.authErrors=r.response.data.errors,alert("Error: Validation failed")):alert("Error: Server error"):alert("Error: Network error")}},async handleProject(e){this.authErrors=[];try{await this.getToken(),e.id||(e.id="");const r=await s.post("/api/projects/"+e.id,e,{headers:{"Content-Type":"multipart/form-data"}});r.status===201?(alert("Success"),t.go(-1)):r.status===200?(alert("Success"),t.go(-1)):alert("Error: Unexpected status code")}catch(r){r.response?r.response.status===422?(this.authErrors=r.response.data.errors,alert("Error: Validation failed")):alert("Error: Server error"):alert("Error: Network error")}},async handleprojectsDelete(e){this.authErrors=[];try{await this.getToken(),await s.delete("/api/projects/"+e),alert("deleted successfully")}catch(r){r.response?r.response.status===422?(this.authErrors=r.response.data.errors,alert("Error: Validation failed")):alert("Error: Server error"):alert("Error: Network error")}},async handleFacultyMember(e){this.authErrors=[];try{await this.getToken(),e.id||(e.id="");const r=await s.post("/api/staff/"+e.id,e,{headers:{"Content-Type":"multipart/form-data"}});r.status===201?(alert("Success"),t.go(-1)):r.status===200?(alert("Success"),t.go(-1)):alert("Error: Unexpected status code")}catch(r){r.response?r.response.status===422?(this.authErrors=r.response.data.errors,alert("Error: Validation failed")):alert("Error: Server error"):alert("Error: Network error")}},async handleFacultieMemberDelete(e){this.authErrors=[];try{await this.getToken(),await s.delete("/api/staff/"+e),alert("deleted successfully")}catch(r){r.response?r.response.status===422?(this.authErrors=r.response.data.errors,alert("Error: Validation failed")):alert("Error: Server error"):alert("Error: Network error")}},async handlesupervisory(e){this.authErrors=[];try{await this.getToken(),e.id||(e.id="");const r=await s.post("/api/supervisory/"+e.id,e,{headers:{"Content-Type":"multipart/form-data"}});r.status===201?(alert("Success"),t.go(-1)):r.status===200?(alert("Success"),t.go(-1)):alert("Error: Unexpected status code")}catch(r){r.response?r.response.status===422?(this.authErrors=r.response.data.errors,alert("Error: Validation failed")):alert("Error: Server error"):alert("Error: Network error")}},async handlesupervisoryDelete(e){this.authErrors=[];try{await this.getToken(),await s.delete("/api/supervisory/"+e),alert("deleted successfully")}catch(r){r.response?r.response.status===422?(this.authErrors=r.response.data.errors,alert("Error: Validation failed")):alert("Error: Server error"):alert("Error: Network error")}},async handleUsers(e){this.authErrors=[];try{await this.getToken(),e.id||(e.id="");const r=await s.post("/api/users/"+e.id,e,{headers:{"Content-Type":"multipart/form-data"}});r.status===201?(alert("Success"),t.go(-1)):r.status===200?(alert("Success"),t.go(-1)):alert("Error: Unexpected status code")}catch(r){r.response?r.response.status===422?(this.authErrors=r.response.data.errors,alert("Error: Validation failed")):alert("Error: Server error"):alert("Error: Network error")}},async handleUsersDelete(e){this.authErrors=[];try{await this.getToken(),await s.delete("/api/users/"+e),alert("deleted successfully")}catch(r){r.response?r.response.status===422?(this.authErrors=r.response.data.errors,alert("Error: Validation failed")):alert("Error: Server error"):alert("Error: Network error")}},async handleStudy(e){this.authErrors=[];try{await this.getToken(),e.id||(e.id=""),console.log(e.id);const r=await s.post("/api/StudyPlan/"+e.id,e,{headers:{"Content-Type":"multipart/form-data"}});r.status===201?(alert("Success"),t.go(-1)):r.status===200?(alert("Success"),t.go(-1)):alert("Error: Unexpected status code")}catch(r){r.response?r.response.status===422?(this.authErrors=r.response.data.errors,alert("Error: Validation failed")):alert("Error: Server error"):alert("Error: Network error")}},async handleStudyDelete(e){this.authErrors=[];try{await this.getToken(),await s.delete("/api/StudyPlan/"+e),alert("deleted successfully"),location.reload()}catch(r){r.response?r.response.status===422?(this.authErrors=r.response.data.errors,alert("Error: Validation failed")):alert("Error: Server error"):alert("Error: Network error")}},async handleAbout_Us(e){this.authErrors=[];try{await this.getToken(),e.id||(e.id="");const r=await s.post("/api/about/"+e.id,e,{headers:{"Content-Type":"multipart/form-data"}});r.status===201?(alert("Success"),t.go(-1)):r.status===200?(alert("Success"),t.go(-1)):alert("Error: Unexpected status code")}catch(r){r.response?r.response.status===422?(this.authErrors=r.response.data.errors,alert("Error: Validation failed")):alert("Error: Server error"):alert("Error: Network error")}},async handleAbout_UsDelete(e){this.authErrors=[];try{await this.getToken(),await s.delete("/api/about/"+e),alert("deleted successfully")}catch(r){r.response?r.response.status===422?(this.authErrors=r.response.data.errors,alert("Error: Validation failed")):alert("Error: Server error"):alert("Error: Network error")}},async handleDetails(e){this.authErrors=[];try{await this.getToken();const r=await s.post("/api/detailed/",e,{headers:{"Content-Type":"multipart/form-data"}});r.status===201?(alert("Success"),t.go(-1)):r.status===200?(alert("Success"),t.go(-1)):alert("Error: Unexpected status code")}catch(r){r.response?r.response.status===422?(this.authErrors=r.response.data.errors,alert("Error: Validation failed")):alert("Error: Server error"):alert("Error: Network error")}},async handleDetails_Delete(e){this.authErrors=[];try{await this.getToken(),await s.delete("/api/detailed/"+e),alert("deleted successfully")}catch(r){r.response?r.response.status===422?(this.authErrors=r.response.data.errors,alert("Error: Validation failed")):alert("Error: Server error"):alert("Error: Network error")}},async handleGrades(e){this.authErrors=[];try{await this.getToken(),console.log(e);const r=await s.post("/api/grade/",e,{headers:{"Content-Type":"multipart/form-data"}});r.status===201?(alert("Success"),t.go(-1)):r.status===200?(alert("Success"),t.go(-1)):alert("Error: Unexpected status code")}catch(r){r.response?r.response.status===422?(this.authErrors=r.response.data.errors,alert("Error: Validation failed")):alert("Error: Server error"):alert("Error: Network error")}},async handleForgotPassword(e){this.authErrors=[];try{await s.post("/api/forgot-password",{email:e})}catch(r){r.response.status===422&&(this.authErrors=r.response.data.errors)}},async handleResetPassword(e){this.authErrors=[];try{await s.post("/api/reset-password",e),this.router.push("/")}catch(r){r.response.status===422&&(this.authErrors=r.response.data.errors)}}}});export{i as u};
